apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
  labels:
    app: airflow
data:
  # These are system-specified config overrides.
  airflow.cfg: |-
    [api]
    auth_backend = airflow.api.auth.backend.deny_all

    # [celery]
    # worker_concurrency = 16

    # [celery_kubernetes_executor]
    # kubernetes_queue = kubernetes

    [core]
    colored_console_log = False
    dags_folder = /opt/airflow/dags
    executor = KubernetesExecutor
    load_examples = True
    remote_logging = False

    [elasticsearch]
    json_format = True
    log_id_template = {dag_id}_{task_id}_{execution_date}_{try_number}

    [elasticsearch_configs]
    max_retries = 3
    retry_timeout = True
    timeout = 30

    [kerberos]
    ccache = /var/kerberos-ccache/cache
    keytab = /etc/airflow.keytab
    principal = airflow@FOO.COM
    reinit_frequency = 3600

    [kubernetes]
    airflow_configmap = airflow-config
    airflow_local_settings_configmap = airflow-config
    multi_namespace_mode = False
    namespace = airflow
    pod_template_file = /opt/airflow/pod_templates/pod_template_file.yaml
    worker_container_repository = apache/airflow
    worker_container_tag = 2.2.3

    [logging]
    colored_console_log = False
    remote_logging = False

    [metrics]
    statsd_host = airflow-statsd
    statsd_on = True
    statsd_port = 9125
    statsd_prefix = airflow

    [scheduler]
    run_duration = 41460
    statsd_host = airflow-statsd
    statsd_on = False
    statsd_port = 9125
    statsd_prefix = airflow

    [webserver]
    enable_proxy_fix = True
    rbac = True
    expose_config = True

  pod_template_file.yaml: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: dummy-name
    spec:
      restartPolicy: Never
      securityContext:
        runAsUser: 0
        fsGroup: 0
      serviceAccountName: airflow-worker
      containers:
        - env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            # Hard Coded Airflow Envs
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-fernet-key
                  key: fernet-key
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
          image: dummy_image
          imagePullPolicy: IfNotPresent
          name: base
          volumeMounts:
            - mountPath: /opt/airflow/logs
              name: logs
            - mountPath: /opt/airflow/dags
              name: dags
              readOnly: true
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
      volumes:
        - name: dags
          persistentVolumeClaim:
            claimName: dags
        - name: logs
          persistentVolumeClaim:
            claimName: logs
        - configMap:
            name: airflow-config
          name: config

  airflow_local_settings.py: |
